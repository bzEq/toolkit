#!/bin/bash
set -e
set -x

DIR=$(dirname "$0")
LLVM_STAGING=${LLVM_STAGING:-"/build/llvm-staging"}
LBH=${DIR}/lbh

! [[ -d ${LLVM_STAGING}/build ]] && mkdir ${LLVM_STAGING}/build
! [[ -d ${LLVM_STAGING}/install ]] && mkdir ${LLVM_STAGING}/install

cd ${LLVM_STAGING}/llvm-project
git checkout main
${LBH} repo
# Build stage1 driver.
! [[ -d ${LLVM_STAGING}/build/stage1 ]] && mkdir ${LLVM_STAGING}/build/stage1
cd ${LLVM_STAGING}/build/stage1
${LBH} dev \
       --monorepo ${LLVM_STAGING}/llvm-project \
       --build_dir ${PWD} \
       --install_prefix=${LLVM_STAGING}/install/stage1 \
       --projects="clang;lld" \
       --runtimes="compiler-rt" \
       --use_malloc=mimalloc \
       --config_only
ninja install-clang install-clang-resource-headers install-runtimes install-builtins install-lld
# Build stage1 runtimes using stage1 driver.
! [[ -d ${LLVM_STAGING}/build/stage1-runtimes ]] && \
  mkdir ${LLVM_STAGING}/build/stage1-runtimes
cmake -GNinja \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=${LLVM_STAGING}/install/stage1 \
      -DCMAKE_C_COMPILER=${LLVM_STAGING}/install/stage1/bin/clang \
      -DCMAKE_CXX_COMPILER=${LLVM_STAGING}/install/stage1/bin/clang++ \
      -S ${LLVM_STAGING}/llvm-project/runtimes \
      -B ${LLVM_STAGING}/build/stage1-runtimes \
      -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind"
ninja -C ${LLVM_STAGING}/build/stage1-runtimes install-cxx install-cxxabi install-unwind
# Build stage2 driver with toolchain built in stage1.
rm -rf ${LLVM_STAGING}/build/stage2
mkdir ${LLVM_STAGING}/build/stage2
cd ${LLVM_STAGING}/build/stage2
cmake -GNinja \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=${LLVM_STAGING}/install/stage2 \
      -DCMAKE_C_COMPILER=${LLVM_STAGING}/install/stage1/bin/clang \
      -DCMAKE_CXX_COMPILER=${LLVM_STAGING}/install/stage1/bin/clang++ \
      -DCMAKE_CXX_FLAGS="-nostdinc++ -nostdlib++ -isystem ${LLVM_STAGING}/install/stage1/include/c++/v1" \
      -DCMAKE_SHARED_LINKER_FLAGS="--ld-path=${LLVM_STAGING}/install/stage1/bin/ld.lld -rtlib=compiler-rt -unwindlib=libunwind -L${LLVM_STAGING}/install/stage1/lib -lc++ -lc++abi -Wl,-rpath,${LLVM_STAGING}/install/stage1/lib" \
      -DCMAKE_EXE_LINKER_FLAGS="--ld-path=${LLVM_STAGING}/install/stage1/bin/ld.lld -rtlib=compiler-rt -unwindlib=libunwind -L${LLVM_STAGING}/install/stage1/lib -lc++ -lc++abi -Wl,-rpath,${LLVM_STAGING}/install/stage1/lib" \
      -S ${LLVM_STAGING}/llvm-project/llvm \
      -B ${LLVM_STAGING}/build/stage2 \
      -DLLVM_ENABLE_RUNTIMES="compiler-rt" \
      -DLLVM_ENABLE_PROJECTS="clang;lld"
ninja check-all check-runtimes
